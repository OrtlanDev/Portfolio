---
import Footer from '@/components/sections/Footer.astro';
import Header from '@/components/sections/header/Header.astro';
import 'src/styles/global.css';
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <meta name="generator" content="{Astro.generator}" />
    <title>Portfolio - Orlando Torres Rojas</title>
    <link rel="stylesheet" href="https://unpkg.com/photoswipe@5/dist/photoswipe.css" />
  </head>

  <body class="font-josefin-sans bg-background" x-data="{theme:'dark'}" x-bind:data-theme="theme">
    <Header />
    <slot />
    <Footer />
  </body>
</html>
<script>
  import PhotoSwipeLightbox from 'photoswipe/lightbox';
  import 'photoswipe/style.css';

  /*xx*
   * Inicializa todas las galerías PhotoSwipe con tamaños dinámicos.
   */
  export const initGalleries = async (): Promise<void> => {
    const galleryEls = document.querySelectorAll<HTMLElement>('[id^="project-gallery-"]');

    for (const galleryEl of galleryEls) {
      // Evita re-inicializar si ya existe
      if ((galleryEl as any).__pswpInit) continue;

      const anchors = galleryEl.querySelectorAll<HTMLAnchorElement>('a[href]');
      if (!anchors.length) continue;

      // Calcula los tamaños basados en la imagen original (href)
      const promises = Array.from(anchors).map(async (anchor) => {
        const href = anchor.getAttribute('href');
        if (!href) return;

        await new Promise<void>((resolve) => {
          const img = new Image();
          img.src = href;
          img.onload = () => {
            anchor.dataset.pswpWidth = img.naturalWidth.toString();
            anchor.dataset.pswpHeight = img.naturalHeight.toString();
            resolve();
          };
          img.onerror = () => {
            console.warn(`[PhotoSwipe] No se pudo cargar la imagen: ${href}`);
            resolve(); // no romper flujo
          };
        });
      });

      await Promise.all(promises);

      // Inicializa PhotoSwipe solo para este contenedor
      const lightbox = new PhotoSwipeLightbox({
        gallery: galleryEl,
        children: 'a',
        pswpModule: () => import('photoswipe'),
        showHideAnimationType: 'fade',
        loop: false,
        bgOpacity: 0.75,
        spacing: 0.1,
      });

      lightbox.init();
      (galleryEl as any).__pswpInit = true;
    }
  };

  // Ejecutar solo en cliente
  if (typeof window !== 'undefined') {
    document.addEventListener('DOMContentLoaded', () => {
      initGalleries().catch(console.error);
    });
  }
</script>
