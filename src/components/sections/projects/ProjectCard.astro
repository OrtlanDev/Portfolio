---
import Button from '@/components/ui/Button.astro';
import GlassmorphicBackground from '@/components/ui/GlassmorphicBackground.astro';
import TagSet from '@/components/ui/TagSet.astro';
import { Image } from 'astro:assets';
import ArrowSquareOut from 'phosphor-astro/ArrowSquareOut.astro';
import GithubLogo from 'phosphor-astro/GithubLogo.astro';
import LockSimple from 'phosphor-astro/LockSimple.astro';

interface ProjectCardProps {
  name: string;
  tag: string;
  images: string[];
  category: string;
  description: string;
  technologies: string[];
  date: number;
  order: number;
  links?: {
    github?: string;
    web?: string;
  };
  projectType?: 'design' | 'private' | 'public';
}

const { name, category, tag, images, date, description, technologies, order, links, projectType } =
  Astro.props as ProjectCardProps;
const galleryId = `project-gallery-${order}`;
const lastProjectNumber = 6;
---

<!-- card -->
<article
  data-filter={category}
  class:list={[
    'relative w-full max-w-150 lg:max-w-full flex lg:items-start justify-start flex-col lg:flex-row gap-6 lg:gap-12 pb-6 lg:border-b-0',
    lastProjectNumber != order && 'border-b-2 border-border/25',
  ]}
>
  <!-- date desktop -->
  <div class="hidden lg:block">
    {
      lastProjectNumber != order && (
        <div class="absolute w-0.5 h-[calc(100%+1.3rem)] right-0.5 top-[1.7rem] bg-border/55" />
      )
    }
    <div class="absolute right-0.5 top-0 font-semibold text-primary px-2 bg-border/25 border-2 border-border/55">
      {date}
    </div>
  </div>
  <!-- date mobile -->
  <div class="block lg:hidden">
    <div
      class="absolute top-8 right-2 backdrop-blur-lg font-semibold text-shadow-md text-text-primary text-shadow-background-dark/25 px-2 bg-border/35 border-2 border-border/15 z-40"
    >
      {date}
    </div>
  </div>
  <!-- image -->
  <div class="relative card-img-animation flex min-w-40! w-[calc(100%-1.5rem)] h-full ml-6 lg:-ml-6" id={galleryId}>
    <GlassmorphicBackground className="card-glass-1 opacity-25 -top-6 -left-6" />
    <GlassmorphicBackground className="card-glass-2 opacity-50 -top-4 -left-4" />
    <GlassmorphicBackground className="card-glass-3 opacity-75 -top-2 -left-2" />
    <GlassmorphicBackground className="card-glass-4 top-0 left-0 flex-center opacity-0 cursor-pointer z-20">
      <a
        href={`/img/projects/${images[0]}`}
        data-pswp-width="1600"
        data-pswp-height="900"
        aria-label={`Abrir galería de ${name}`}
        class="card-glass-trigger absolute inset-0 flex items-center justify-center opacity-0 hover:opacity-100 transition-opacity duration-200 pointer-events-auto"
      >
        <p class="font-black text-6xl text-shadow-md text-text-primary text-shadow-background-dark/25">
          {images.length - 1}
          <span class="text-primary">+</span>
        </p>
        <div
          class="absolute text-shadow-md text-text-primary text-shadow-background-dark/25 px-4 py-1 rounded-xs bg-primary/25 border border-primary/30 top-3 left-3"
        >
          {category}
        </div></a
      >
    </GlassmorphicBackground>
    <Image
      class:list="card-img z-10 border-2 border-border/55 transition-all duration-150 ease-in-out"
      src={`/img/projects/${images[0]}`}
      alt={`Screenshot of project ${name}`}
      height={50}
      width={600}
      ;
    />

    <div class="hidden">
      {
        images
          .slice(1)
          .map((img, index) => (
            <a
              href={`/img/projects/${img}`}
              data-pswp-width="1600"
              data-pswp-height="900"
              data-caption={`Screenshot ${index + 1} of ${name}`}
              id={galleryId + index}
            />
          ))
      }
    </div>
  </div>
  <!-- data -->
  <div class="relative px-6 w-full flex flex-col gap-4">
    <div class="flex flex-col gap-1 items-baseline">
      <!-- name -->
      <h3 class="text-3xl sm:text-4xl text-text-primary font-light">{name}</h3>
      <!-- tag -->
      <h3 class="text-primary text-sm sm:text-lg tracking-widest uppercase">{tag}</h3>
    </div>
    <!-- technologies -->
    <TagSet data={technologies} />
    <!-- description -->
    <p class="text-text-secondary text-lg lg:text-xl font-light lg:pr-4 w-full">{description}</p>
    <!-- action buttons -->
    <div class="mt-2 flex gap-6">
      {
        projectType == 'public' && (
          <Button href={links?.github} variant="primary" className="w-full md:w-min">
            <GithubLogo width={20} />
            View GitHub
          </Button>
        )
      }
      {
        projectType == 'public' && links?.web != null && (
          <Button href={links?.web} variant="secondary" className="w-full md:w-min">
            View Project <ArrowSquareOut width={20} />
          </Button>
        )
      }
      {
        projectType == 'private' && (
          <div class="flex  items-center justify-center rounded-xs border border-border/40 bg-muted/30 p-4 gap-2 backdrop-blur-sm">
            <div class="mb-6 md:mb-0 md:mr-2 p-1 w-6 h-6 border-2 bg-pink-600/20 border-pink-600/55 rotate-45">
              <LockSimple width={20} class="-rotate-45 w-full h-full text-pink-600" />
            </div>
            <p class=" font-base text-sm text-pink-600 max-w-md">
              Este proyecto pertenece a una empresa y su acceso está restringido
            </p>
          </div>
        )
      }
    </div>
  </div>
</article>
